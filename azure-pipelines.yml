trigger:
- main

resources:
- repo: self

variables:
  dockerRegistryServiceConnection: '942480c9-e31b-422f-bd4a-cdda8239487b'
  imageRepository: 'iboncastroazureks'
  containerRegistry: 'iboncasecr.azurecr.io'
  dockerfilePath: '**/Dockerfile'
  tag: '$(Build.BuildId)'
  imagePullSecret: 'iboncasecr6b8d-auth'
  vmImageName: 'ubuntu-latest'
  k8sNamespaceForPR: 'review-app-$(System.PullRequest.PullRequestId)'

stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: Build
    displayName: Build
    pool: Default
    steps:
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)

    - upload: manifests
      artifact: manifests

- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build
  jobs:
  - deployment: Deploy
    displayName: Deploy
    pool: Default
    environment: 'iboncastroazurek8s.default'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: KubernetesManifest@0
            displayName: Create imagePullSecret
            inputs:
              action: createSecret
              secretName: $(imagePullSecret)
              dockerRegistryEndpoint: $(dockerRegistryServiceConnection)
              namespace: $[variables['Build.SourceBranch'].startsWith('refs/pull/') ? variables['k8sNamespaceForPR'] : 'default']

          - task: KubernetesManifest@0
            displayName: Deploy to Kubernetes cluster
            inputs:
              action: deploy
              manifests: |
                $(Pipeline.Workspace)/manifests/deployment.yml
                $(Pipeline.Workspace)/manifests/service.yml
              imagePullSecrets: |
                $(imagePullSecret)
              containers: |
                $(containerRegistry)/$(imageRepository):$(tag)
              namespace: $[variables['Build.SourceBranch'].startsWith('refs/pull/') ? variables['k8sNamespaceForPR'] : 'default']

          - ${{ if startsWith(variables['Build.SourceBranch'], 'refs/pull/') }}:
            - task: Kubernetes@1
              displayName: 'Create a new namespace for the pull request'
              inputs:
                command: apply
                useConfigurationFile: true
                inline: '{ "kind": "Namespace", "apiVersion": "v1", "metadata": { "name": "$(k8sNamespaceForPR)" }}'

            - task: Kubernetes@1
              name: get
              displayName: 'Get services in the new namespace'
              continueOnError: true
              inputs:
                command: get
                namespace: $(k8sNamespaceForPR)
                arguments: svc
                outputFormat: jsonpath='http://{.items[0].status.loadBalancer.ingress[0].ip}:{.items[0].spec.ports[0].port}'

            - script: |
                url="$(get.KubectlOutput)"
                message="Your review app has been deployed"
                if [ ! -z "$url" -a "$url" != "http://:" ]
                then
                  message="${message} and is available at $url.<br><br>[Learn More](https://aka.ms/testwithreviewapps) about how to test and provide feedback for the app."
                fi
                echo "##vso[task.setvariable variable=GITHUB_COMMENT]$message"
